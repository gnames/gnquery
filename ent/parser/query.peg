package parser

type engine Peg {
}

Query <- _? Components Tail END

Tail <- (_ .*)?

Components <- Element (_ Element)*

Element <- NameString NameVal / DataSources DSVal / Year YearVal /
  AllResults AllVal / Genus GenusVal / Species SpeciesVal /
  SpeciesInfra SpeciesInfraVal /SpeciesAny SpeciesAnyVal /
  Author AuVal / ParentTaxon TaxonVal 


NameVal <- GenusVal _ SpeciesVal (_ SpeciesInfraVal)? (_ AuVal)? (_ YearVal)?

DSVal <- Numbers

AllVal <- Bool

SpeciesAnyVal <- Word

SpeciesInfraVal <- Word

SpeciesVal <- Word

TaxonVal <- CapsWord

AuVal <- CapsWord

GenusVal <- CapsWord

YearVal <- YearRange / YearNum


Author <- 'au:'

DataSources <- 'ds:'

AllResults <- 'all:'

Genus <- 'gen:' / 'g:'

NameString <- 'n:'

ParentTaxon <- 'tx:'

Species <- 'sp:'

SpeciesAny <- 'asp:'

SpeciesInfra <- 'isp:'

Year <- 'yr:' / 'y:'


YearRange <- '-' YearNum / YearNum '-' YearNum?

YearNum <- [12] [0789] Digits Digits

Numbers <- Number (',' Number)*

Number <- [0-9]+

Bool <- 'true' / 't' / 'false' / 'f'


Digits <- [0-9]

CapsWord <- [A-ZÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑŒÒÓÔÕÖØÙÚÛÜÝĆČĎİĶĹĺĽľŁłŅŌŐŒŘŚŜŞŠŸŹŻŽƒǾȘȚ] Word

Word <- [^A-Z][^: ]+ &(_ / END)

_ <- MultipleSpace / SingleSpace

MultipleSpace <- SingleSpace SingleSpace+

SingleSpace <- ' '

END <- !.
